{
  "name": "mobile-native-fresh",
  "version": "1.0.0",
  "main": "index.ts",
  "type": "module",
  "scripts": {
    "alias:sanity": "bash scripts/alias-sanity.sh",
    "validate:patch": "bash scripts/validate-patch.sh",
    "dev": "bash scripts/dev-workflow.sh",
    "maintain": "bash scripts/maintain-validation.sh",
    "lint:chunk": "NODE_OPTIONS=--max-old-space-size=8192 eslint src-nextgen --ext .ts,.tsx --max-warnings=0 --cache",
    "start": "npx expo start",
    "dev:nextgen": "echo 'EXPO_PUBLIC_USE_NEXTGEN=true' > .env.development.local && echo 'EXPO_PUBLIC_ENVIRONMENT=nextgen' >> .env.development.local && echo 'USE_NEXTGEN=true' >> .env.development.local && EXPO_PUBLIC_USE_NEXTGEN=true EXPO_PUBLIC_ENVIRONMENT=nextgen USE_NEXTGEN=true npx expo start --ios --clear --port 4567",
    "dev:legacy": "rm -f .env.development.local && EXPO_PUBLIC_USE_NEXTGEN=false EXPO_PUBLIC_ENVIRONMENT=legacy USE_NEXTGEN=false npx expo start --ios --clear --port 8081",
    "validate:env": "bash scripts/validate-dual-mount-env.sh",
    "test:dual-mount": "bash scripts/test-dual-mount-toggle.sh",
    "android": "npx expo start --android",
    "ios": "npx expo start --ios",
    "web": "npx expo start --web",
    "postinstall": "npm uninstall -g expo-cli || true",
    "lint": "NODE_OPTIONS=--max-old-space-size=8192 eslint . --ext .ts,.tsx --max-warnings 0",
    "lint:fix": "eslint . --ext .ts,.tsx --fix",
    "lint:ci": "NODE_OPTIONS=--max-old-space-size=8192 eslint . --ext .ts,.tsx --max-warnings=0",
    "lint:check-theme": "eslint . --ext .ts,.tsx --format=unix 2>/dev/null | grep 'no-restricted-imports' | wc -l",
    "lint:wrap-text": "eslint . --ext .ts,.tsx --fix --rulesdir eslint-rules --rule 'no-text-outside-text: error',",
    "lint:fix-text": "node scripts/fix-unwrapped-text.cjs",
    "lint:fix-jsx": "node scripts/enforce-jsx-rules.cjs",
    "lint:check-jsx": "eslint . --ext .ts,.tsx --format=unix 2>/dev/null | grep -E '(no-text-outside-text|no-inline-colors|enforce-theme-hook)' | wc -l",
    "lint:fix-accessibility": "node scripts/fix-accessibility.cjs",
    "lint:fix-all": "npm run lint:fix-text && npm run lint:fix-accessibility && npm run lint:check-theme && npm run lint:fix",
    "lint:enforce-text-wrapping": "eslint . --ext .ts,.tsx --rule 'thoughtmarks/enforce-text-wrapping: error' --fix",
    "lint:check-accessibility-props": "node scripts/check-accessibility-props.cjs",
    "pre-commit": "npm run lint:fix-all && node scripts/scan-unwrapped-text.cjs",
    "fix:text-errors": "node scripts/auto-fix-text-errors.cjs",
    "auto:fix": "npm run fix:text-errors",
    "watch:text-errors": "node scripts/watch-text-errors.cjs",
    "watch:fix": "npm run watch:text-errors",
    "test:safeguards": "npm run lint:check-accessibility-props && npm run lint",
    "test:accessibility:dry-run": "node scripts/test-accessibility-dry-run.cjs",
    "test:accessibility:cross-platform": "node scripts/test-accessibility-cross-platform.cjs",
    "test:integration:accessibility": "node scripts/test-integration-accessibility.cjs",
    "test:navigation:dry-run": "node scripts/test-navigation-dry-run.cjs",
    "test:navigation:deep-linking": "node scripts/test-navigation-deep-linking.cjs",
    "test:navigation:state-persistence": "node scripts/test-navigation-state-persistence.cjs",
    "test:integration:navigation": "node scripts/test-integration-navigation.cjs",
    "test:state:dry-run": "node scripts/test-state-dry-run.cjs",
    "test:state:hydration": "node scripts/test-state-hydration.cjs",
    "test:state:schema-migration": "node scripts/test-state-schema-migration.cjs",
    "test:integration:state": "node scripts/test-integration-state.cjs",
    "test:error-boundary:dry-run": "node scripts/test-error-boundary-dry-run.cjs",
    "test:error-boundary:prod-dev": "node scripts/test-error-boundary-prod-dev.cjs",
    "test:integration:error-boundary": "node scripts/test-integration-error-boundary.cjs",
    "test:types:dry-run": "node scripts/test-types-dry-run.cjs",
    "test:types:backend-schema": "node scripts/test-types-backend-schema.cjs",
    "test:types:unused": "node scripts/test-types-unused.cjs",
    "test:integration:types": "node scripts/test-integration-types.cjs",
    "test:hooks:dry-run": "node scripts/test-hooks-dry-run.cjs",
    "test:hooks:concurrent": "node scripts/test-hooks-concurrent.cjs",
    "test:hooks:ssr": "node scripts/test-hooks-ssr.cjs",
    "test:integration:hooks": "node scripts/test-integration-hooks.cjs",
    "test:api:dry-run": "node scripts/test-api-dry-run.cjs",
    "test:api:retry-timeout": "node scripts/test-api-retry-timeout.cjs",
    "test:api:cancellation": "node scripts/test-api-cancellation.cjs",
    "test:integration:api": "node scripts/test-integration-api.cjs",
    "test:text:dry-run": "node scripts/test-text-dry-run.cjs",
    "test:text:accessibility": "node scripts/test-text-accessibility.cjs",
    "test:text:rtl": "node scripts/test-text-rtl.cjs",
    "test:text:visual-regression": "node scripts/test-text-visual-regression.cjs",
    "test:integration:text": "node scripts/test-integration-text.cjs",
    "validate:dual-mount": "bash scripts/validate-dual-mount.sh",
    "validate:dual-mount:device": "timeout 60s bash scripts/validate-dual-mount-device.sh || exit 0",
    "validate:dual-mount:device:nb": "nohup npm run validate:dual-mount:device >/dev/null 2>&1 &",
    "ci:legacy-alias-check": "npm run alias:sanity && npm run validate:dual-mount && npm run validate:dual-mount:device",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "NODE_OPTIONS=--max-old-space-size=8192 jest --runInBand",
    "test:integration": "jest --testPathPattern=.*\\.integration\\.(test|spec)\\.(ts|tsx)$",
    "build:ios": "eas build --platform ios",
    "build:android": "eas build --platform android",
    "build:ios-preview": "eas build --platform ios --profile preview",
    "build:android-preview": "eas build --platform android --profile preview",
    "build:all": "eas build --platform all",
    "build:all-preview": "eas build --platform all --profile preview",
    "test:ui:interactions": "detox test --configuration ios.sim.debug",
    "test:ui:build": "detox build --configuration ios.sim.debug",
    "test:e2e": "detox test --configuration ios.sim.debug",
    "test:visual:regression": "node scripts/visual-regression.cjs",
    "test:screenshots:capture": "node scripts/capture-screenshots.cjs capture",
    "test:screenshots:baseline": "node scripts/visual-regression.cjs baseline",
    "test:screenshots:cleanup": "/opt/homebrew/bin/node scripts/capture-screenshots.cjs cleanup",
    "test:ui:full": "npm run test:ui:build && npm run test:ui:interactions && npm run test:screenshots:capture && npm run test:visual:regression",
    "test:ui:validate": "npm run test:ui:interactions && npm run test:visual:regression",
    "test:ui": "jest tests/ui-interactions.test.js",
    "test:maestro:ui": "~/.maestro/bin/maestro test maestro/flows/ui-interactions.yaml",
    "test:maestro:visual": "~/.maestro/bin/maestro test maestro/flows/visual-regression.yaml",
    "test:maestro:baseline": "node scripts/maestro-visual-regression.cjs baseline",
    "test:maestro:capture": "node scripts/maestro-visual-regression.cjs capture",
    "test:maestro:compare": "node scripts/maestro-visual-regression.cjs compare",
    "test:maestro:regression": "node scripts/maestro-visual-regression.cjs test",
    "test:maestro:screenshots": "~/.maestro/bin/maestro test maestro/flows/screenshot-validation.yaml",
    "test:maestro:boot": "bash scripts/cli/maestro-run-boot.sh",
    "test:detox:boot": "detox test --configuration ios.sim.debug --headless || true",
    "validate:visual": "bash ./scripts/cli/visual-boot-validate.sh . --out=/Users/sawyer/gitSync/.cursor-cache/MAIN/validation/visual",
    "test:provider-audit": "jest --testNamePattern=\"Provider/Hook Usage Audit\" --watchAll=false",
    "audit:hooks": "node scripts/audit-hooks.js",
    "validate:ultra-runtime": "bash scripts/ultra-runtime-validation.sh",
    "validate:strict-runtime": "node scripts/strict-runtime-validation.cjs",
    "test:maestro:full": "npm run test:maestro:ui && npm run test:maestro:regression",
    "verify:nondestructive": "scripts/admin/launch-verify-nondestructive.sh",
    "rollback:from-report": "scripts/admin/launch-rollback-from-report.sh",
    "enforce:no-disown": "scripts/admin/launch-enforce-no-disown.sh",
    "print:verify": "scripts/admin/launch-print-verify.sh",
    "print:diffs": "scripts/admin/launch-print-diffs.sh"
  },
  "dependencies": {
    "@expo-google-fonts/oswald": "^0.4.1",
    "@expo-google-fonts/ubuntu": "^0.4.0",
    "@expo/config-plugins": "~10.1.1",
    "@expo/metro-runtime": "~5.0.4",
    "@hookform/resolvers": "^5.2.1",
    "@react-native-async-storage/async-storage": "2.1.2",
    "@react-native-community/datetimepicker": "8.4.1",
    "@react-native-masked-view/masked-view": "0.3.2",
    "@react-native-voice/voice": "^3.2.4",
    "@react-navigation/bottom-tabs": "^7.3.17",
    "@react-navigation/native": "^7.1.13",
    "@react-navigation/stack": "^7.3.6",
    "@tanstack/react-query": "^5.84.1",
    "@types/crypto-js": "^4.2.2",
    "axios": "^1.11.0",
    "crypto-js": "^4.2.0",
    "date-fns": "^4.1.0",
    "expo": "53.0.20",
    "expo-apple-authentication": "~7.2.4",
    "expo-auth-session": "~6.2.1",
    "expo-av": "~15.1.7",
    "expo-blur": "^14.1.5",
    "expo-crypto": "^14.1.5",
    "expo-font": "~13.3.1",
    "expo-local-authentication": "^16.0.5",
    "expo-notifications": "^0.31.4",
    "expo-speech": "^13.1.7",
    "expo-splash-screen": "~0.30.10",
    "expo-status-bar": "~2.2.3",
    "firebase": "^11.9.1",
    "lucide-react-native": "^0.522.0",
    "react": "19.0.0",
    "react-dom": "19.0.0",
    "react-hook-form": "^7.62.0",
    "react-native": "0.79.5",
    "react-native-draggable-flatlist": "^4.0.3",
    "react-native-gesture-handler": "~2.24.0",
    "react-native-reanimated": "~3.17.4",
    "react-native-responsive-fontsize": "^0.5.1",
    "react-native-safe-area-context": "5.4.0",
    "react-native-screens": "~4.11.1",
    "react-native-svg": "15.11.2",
    "react-native-vector-icons": "^10.2.0",
    "react-native-web": "^0.20.0",
    "text-encoding": "^0.7.0",
    "zod": "^4.0.15",
    "zustand": "^5.0.7"
  },
  "devDependencies": {
    "@babel/core": "^7.25.2",
    "@babel/preset-env": "^7.28.0",
    "@babel/preset-react": "^7.27.1",
    "@eslint/js": "^9.29.0",
    "@expo/ngrok": "^4.1.0",
    "@react-native-community/cli": "latest",
    "@testing-library/jest-native": "^5.4.3",
    "@testing-library/react-native": "^13.2.2",
    "@types/jest": "^30.0.0",
    "@types/react": "~19.0.10",
    "@types/react-native-vector-icons": "^6.4.18",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "babel-plugin-module-resolver": "^5.0.2",
    "detox": "^20.40.2",
    "env-cmd": "^10.1.0",
    "eslint": "^8.57.1",
    "eslint-config-expo": "^9.2.0",
    "eslint-plugin-expo": "0.1.4",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-promise": "^7.2.1",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-native": "^5.0.0",
    "eslint-plugin-thoughtmarks": "file:eslint-plugin-thoughtmarks",
    "eslint-plugin-unused-imports": "^4.1.4",
    "glob": "^11.0.3",
    "husky": "^8.0.3",
    "jest": "~29.7.0",
    "jest-expo": "^53.0.9",
    "lint-staged": "^15.2.2",
    "typescript": "~5.8.3"
  },
  "private": true,
  "expo": {
    "doctor": {
      "reactNativeDirectoryCheck": {
        "exclude": [
          "react-native-responsive-fontsize",
          "firebase",
          "react-native-vector-icons"
        ]
      }
    }
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "eslint --fix",
      "eslint --rule 'no-restricted-imports: error'"
    ]
  }
}
