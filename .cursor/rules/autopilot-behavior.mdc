---
description: Enforce autopilot behavior and validation barriers
globs:
  - "**/patch-*.json"
  - "**/autopilot-*.log"
alwaysApply: true
---
# Autopilot Behavior and Agent Discipline

## Rules

- Autopilot must report every step it performs.
- All assumptions are forbidden during autopilot mode.
- If feedback is ambiguous, autopilot must pause and ask.
- Summaries, commits, and tags may not be issued without proof.
- If multiple agents are running, logs must show relay handoff success.

# Autopilot Validation Barrier Enforcement

## Rules

- GPT/Cursor must **not** proceed unless all post-mutation checks pass:

  - ✅ TypeScript: `tsc --noEmit`
  - ✅ ESLint: `eslint . --ext .ts,.tsx --max-warnings=0`
  - ✅ Unit Tests: `npm run test:unit -- --watchAll=false`
  - ✅ Runtime: `validate-runtime.sh`
  - ✅ Component + Role tests
  - ✅ Performance tests

- A failure in any validator must:
  - Halt progression
  - Mark patch `.summary.md` as FAIL
  - Move to `summaries/.failed/`

---
**Status**: ✅ **ENFORCED - HIGH**
**Compliance**: Strict validation with automatic rollback
**Scope**: All operations across all contexts
