---
alwaysApply: true
title: Automatic Patch Hardening Protocol (Aligned to NB-runner & Absolute Paths)
---

##  Automatic Patch Hardening Protocol
This rule enforces automatic patch hardening on intake before execution to prevent common patch failures and ensure successful deployment.

## Pre-Execution Analysis & Fixes

### Validation Requirement Analysis
- Check if validation commands match what the patch actually does
- Add missing console logging if validation expects logs
- Fix timing issues (bounded TTLs via NB-runner instead of ad-hoc sleeps)
- Ensure validation looks for evidence that actually exists

### Component Integration Checks
- Verify hooks are actually used in components
- Add missing imports and component updates
- Ensure console declarations are present
- Fix styling issues (invalid colors, etc.)

### File Path & Structure Validation
- Ensure summaryFile points to correct cache location (`/Users/sawyer/gitSync/.cursor-cache/MAIN/summaries/`)
- Verify all referenced files exist or will be created
- Check for proper import paths
- Validate JSON structure

### Runtime Safety Checks
- Use NB-runner wrappers for any long/IO-bound work:
  `node scripts/nb.cjs --ttl <Xs> --label <name> --log validations/logs/<name>.log --status validations/status -- <cmd>`
- Do not use `{ ... & }`, `disown`, `$!`, raw `timeout`, or `tail -f`
- Replace ad-hoc `grep` pipelines with node-based scanners where needed

## Implementation Strategy
When receiving a patch:
1. Parse the patch and identify potential issues
2. Apply automatic fixes before execution
3. Execute the hardened patch
4. Create summary in correct location

## Common Fixes Applied

### Missing Console Logging
- Add `console.log()` calls if validation expects them
- Ensure logging matches validation evidence checks

### Invalid Colors
- Fix `#fffa` â†’ `rgba(255,255,255,0.6)`
- Validate all hex colors are 6 digits

### Missing Imports
- Add required imports to components
- Fix import paths for new components
- Ensure all referenced components exist

### Timing Issues
- Prefer bounded NB-runner TTLs over arbitrary sleeps
- Ensure Metro has time to start and mount components via safe launcher + probe

### Summary Path Fixes
- Always use centralized cache location: `/Users/sawyer/gitSync/.cursor-cache/MAIN/summaries/`
- Use proper `summary-` prefix for filenames
- Ensure `summaryFile` field is present

### Component Integration
- Wire up hooks to components if hooks are created
- Add missing component usage
- Ensure hooks are actually called and logged

## Validation Patterns (modernized)
- Replace shell `grep` checks with:
  - NB-runner bounded probes (e.g., curl+status) or
  - Node-based scanners for file/system evidence
- Avoid inline background groups and unbounded tails

## Error Prevention
- Always use NB-runner for non-trivial commands
- Add TTLs to long-running operations
- Ensure proper error handling in components
- Validate all file paths before execution

## Alignment & Scope
- This protocol complements patch safety and validation-chain rules
- All commands must use absolute paths rooted at `/Users/sawyer/gitSync/*`
