---
alwaysApply: true
description: Enforces app refresh validation as part of post-mutation hardening to catch runtime errors
---

# App Refresh Validation Rule

## CRITICAL: Always Refresh App for Runtime Validation

All patches must include app refresh validation as part of post-mutation hardening to catch runtime errors that static analysis cannot detect.

## Mandatory App Refresh Pattern

### Safe Expo Launch (required)
```bash
# Non-blocking, history-safe launcher
/Users/sawyer/gitSync/tm-mobile-cursor/mobile-native-fresh/scripts/admin/safe-launch-expo.sh || true
```

### Health Probe (NB-runner)
```bash
# Bounded, non-blocking probe of Metro status
node scripts/nb.cjs --ttl 18s --label expo-health --log validations/logs/expo-health.log --status validations/status -- bash -lc 'curl -sSf http://localhost:8081/status >/dev/null'
```

## Post-Mutation Validation Requirements

### 1. Static Validation (Pre-Refresh)
- TypeScript compilation (`npx tsc --noEmit --skipLibCheck`)
- ESLint validation (`npx eslint . --ext .ts,.tsx --max-warnings=0`)
- Unit tests (`npm test -- --watchAll=false`)

### 2. Runtime Validation (Post-Refresh)
- Launch via safe launcher (above)
- Verify Metro responds on localhost:8081 (NB-runner health probe)
- Check for runtime errors in console
- Confirm app boots without fatal errors
- Validate component rendering

### 3. Validation Script Integration
```bash
# In postMutationBuild section (examples)
"postMutationBuild": {
  "shell": [
    "npx tsc --noEmit --skipLibCheck || exit 101",
    "npx eslint . --ext .ts,.tsx --max-warnings=0 || exit 102",
    "npm run test:unit -- --watchAll=false || exit 103",
    "/Users/sawyer/gitSync/tm-mobile-cursor/mobile-native-fresh/scripts/admin/safe-launch-expo.sh || true",
    "node scripts/nb.cjs --ttl 18s --label expo-health --log validations/logs/expo-health.log --status validations/status -- bash -lc 'curl -sSf http://localhost:8081/status >/dev/null'"
  ]
}
```

## Why App Refresh is Critical

### Static vs Runtime Errors
- Static analysis misses bundler/import/runtime composition issues
- Runtime validation catches bundler errors, import/export mismatches, missing deps, mount errors
- Safe refresh forces a full bundle and exposes new errors

### Common Runtime Issues Detected
- Duplicate component declarations (e.g., Text conflicts)
- Import/export mismatches
- Missing dependencies
- Component mounting errors
- Hot reload failures

## Summary Requirements
All patch summaries must include:
- App refresh confirmation (safe-launcher used)
- Runtime validation status
- Expo server response verification
- Any runtime errors encountered

## Enforcement
- No exceptions: every patch must include app refresh validation
- Failure handling: if app refresh fails, validation fails
- Documentation: runtime validation results must be documented in summary

## Validation Checklist
- [ ] Static validation passes (TypeScript, ESLint, Tests)
- [ ] Safe launcher executed successfully
- [ ] Metro responds on localhost:8081
- [ ] No runtime errors in console
- [ ] App boots without fatal errors
- [ ] Summary includes runtime validation results

## Error Prevention
- Do not use inline background groups or `disown`/`$!`
- Use NB-runner for bounded health checks
- Ensure proper error handling and bounded timeouts
- Verify absolute paths in all commands

## Compliance
This rule applies to ALL patches and ALL post-mutation validation. No patch may be marked complete without successful app refresh validation using the safe launcher and NB-runner health probe.
